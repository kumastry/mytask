{"version":3,"sources":["App.js","index.js"],"names":["Cards","props","className","tasks","map","idx","class","id","title","type","value","onClick","editTask","deleteTask","React","Component","TaskForm","state","addTask","bind","handleChange","event","this","setState","target","key","edit","splice","unshift","alert","localStorage","app","saveDate","JSON","parse","setItem","stringify","placeholder","onChange","Header","Footer","href","App","render","document","querySelector"],"mappings":"kKAKA,SAASA,EAAMC,GAEX,OACA,8BACA,qBAAKC,UAAU,qBAAf,SACCD,EAAME,MAAMC,KAAK,SAACD,EAAOE,GAC1B,OACA,qBAAKH,UAAU,SAAf,SACA,sBAAKI,MAAM,OAAX,UACA,qBAAKA,MAAM,eAAX,SACA,mBAAGA,MAAM,QAAQC,GAAG,OAApB,SACCJ,EAAMK,UAIP,yBAAQF,MAAM,cAAd,UACI,uBAAQG,KAAO,SAASC,MAAQ,OAAOR,UAAU,mBAAmBS,QAAU,kBAAMV,EAAMW,SAASP,MACnG,uBAAQI,KAAO,SAASC,MAAQ,SAASR,UAAU,mBAAmBS,QAAS,kBAAMV,EAAMY,WAAWR,qBAcvFS,IAAMC,U,IAyDvBC,E,kDACF,WAAYf,GAAO,IAAD,8BACd,cAAMA,IACDgB,MAAQ,CACTP,MAAQ,GACRP,MAAO,IAEX,EAAKe,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKP,SAAW,EAAKA,SAASO,KAAd,gBAChB,EAAKN,WAAa,EAAKA,WAAWM,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATN,E,yDAYLE,GACTC,KAAKC,SAAS,CAACb,MAAOW,EAAMG,OAAOd,U,+BAG9Be,GACL,IAAMC,EAAO,CAAClB,MAAMc,KAAKL,MAAMP,OAC/BY,KAAKL,MAAMd,MAAMwB,OAAOF,EAAK,EAAGC,GAChCJ,KAAKC,SAAS,CACVpB,MAAMmB,KAAKL,MAAMd,QAErBmB,KAAKL,MAAMP,MAAM,K,iCAGVe,GACPH,KAAKL,MAAMd,MAAMwB,OAAOF,EAAK,GAC7BH,KAAKC,SAAS,CACVpB,MAAQmB,KAAKL,MAAMd,U,8BAMnBkB,GACmB,IAApBC,KAAKL,MAAMP,OACVY,KAAKL,MAAMd,MAAMyB,QAAQ,CACrBpB,MAAOc,KAAKL,MAAMP,QAGtBY,KAAKC,SAAS,CACVpB,MAAQmB,KAAKL,MAAMd,QAGvBmB,KAAKL,MAAMP,MAAO,IAElBmB,MAAM,Q,0CASd,GAAGC,aAAaC,IAAI,CAClB,IAAMC,EAAWC,KAAKC,MAAMJ,aAAaC,KACzCT,KAAKC,SAAS,CACZpB,MAAQ6B,EAAS7B,W,2CAQrB2B,aAAaK,QAAQ,MAAOF,KAAKG,UAAUd,KAAKL,U,+BAK9C,OACD,8BACG,0BAASf,UAAU,UAAnB,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SACI,uBAAOA,UAAU,QAAQO,KAAK,OAAO4B,YAAY,YAAY3B,MAAQY,KAAKL,MAAMP,MAAO4B,SAAUhB,KAAKF,mBAI9G,8BACI,wBAAQlB,UAAU,0CAA0CS,QAASW,KAAKJ,QAA1E,wBAGJ,cAAClB,EAAD,CAAOG,MAAOmB,KAAKL,MAAMd,MAAOU,WAAYS,KAAKT,WAAYD,SAAUU,KAAKV,oB,GArFjEE,IAAMC,WAgG7B,SAASwB,IACL,OACI,wBAAQrC,UAAY,eAApB,SACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,6BAOZ,SAASsC,IACL,OACA,wBAAQtC,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,UACI,uBACI,8CACA,4BAAG,mBAAGuC,KAAO,yBAAV,sBACH,4BAAG,mBAAGA,KAAO,gCAAV,4BAqBJC,MAdf,WACI,OACA,qCACA,cAACH,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,Q,aCxNJG,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.f7c3d659.chunk.js","sourcesContent":["\nimport {useState, useEffect} from \"react\";\nimport React from 'react';\n\n\nfunction Cards(props){\n   \n    return (\n    <div>\n    <div className=\"columns is-desktop\">       \n    {props.tasks.map( (tasks, idx) => {\n    return  ( \n    <div className=\"column\" >\n    <div class=\"card\">\n    <div class=\"card-content\">\n    <p class=\"title\" id=\"edit\">\n    {tasks.title}           \n    </p>\n    </div>\n\n    <footer class=\"card-footer\">\n        <input  type = \"button\" value = \"edit\" className=\"card-footer-item\" onClick ={() => props.editTask(idx)}/>  \n        <input  type = \"button\" value = \"delete\" className=\"card-footer-item\" onClick={() => props.deleteTask(idx)} />\n    </footer>\n\n    </div>\n    </div>\n\n    );\n    })}\n    </div>\n    </div>        \n    );\n    \n}\n\nclass EditForm extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        input: \"\",\n        editing: true,\n      }\n      this.handleEditing = this.handleEditing.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    render() {\n      const { editing } = this.state\n      return (\n        <div>\n          <h1>EditForm</h1>\n          <form>\n            {editing ? (\n              <div>\n                <input\n                  onChange={(e) => {\n                    this.setState({ input: e.target.value })\n                  }}\n                  type=\"text\"\n                  value={this.state.input}\n                />\n  \n                <button onClick={this.handleSubmit}>Save</button>\n              </div>\n            ) : (\n              <div>\n                <span>{this.state.input}</span>\n                <button onClick={this.handleEditing}>Edit</button>\n              </div>\n            )}\n          </form>\n        </div>\n      )\n    }\n  \n    handleEditing(e) {\n      e.preventDefault()\n      this.setState({\n        editing: !this.state.editing,\n      })\n    }\n  \n    handleSubmit(e) {\n      e.preventDefault()\n      if (!this.state.input) return\n      this.setState({\n        input: this.state.input,\n        editing: !this.state.editing,\n      })\n    }\n  }\n  \n\nclass TaskForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            value : '',\n            tasks: []\n        };\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n      }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    editTask(key) {\n        const edit = {title:this.state.value};\n        this.state.tasks.splice(key, 1, edit);\n        this.setState({\n            tasks:this.state.tasks\n        });\n        this.state.value='';\n    }\n\n    deleteTask(key) {\n        this.state.tasks.splice(key, 1);\n        this.setState({\n            tasks : this.state.tasks\n        });\n\n        \n    }\n\n    addTask(event) {\n        if(this.state.value != '') {\n            this.state.tasks.unshift({\n                title: this.state.value\n            });\n\n            this.setState({\n                tasks : this.state.tasks\n            });\n\n            this.state.value= '';\n        } else {\n            alert(\"!?\");\n        }\n    }\n\n\n\n\n    // 初回のみ実行\n componentDidMount() {\n    if(localStorage.app){ // もし前回のデータがあったら、ローカルストレージの値を取得し、更新する\n      const saveDate = JSON.parse(localStorage.app);\n      this.setState({\n        tasks : saveDate.tasks\n      })\n    }\n  }\n\n  // stateが変更されたら実行\n  componentDidUpdate() {\n    // ローカルストレージにステートの情報を保存\n    localStorage.setItem('app', JSON.stringify(this.state));\n  }\n    \n  \n    render() {\n      return (\n     <div>\n        <section className=\"section\">\n            <div className=\"field\">\n                <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Text task\" value ={this.state.value} onChange={this.handleChange} />\n                </div>\n            </div>\n\n            <div>\n                <button className=\"button is-fullwidth is-success is-light\" onClick={this.addTask}>Add Task</button>\n            </div>\n\n            <Cards tasks={this.state.tasks} deleteTask={this.deleteTask} editTask={this.editTask}/>\n        </section>\n      </div>  \n      );\n\n      \n    }\n  }\n\n\n\nfunction Header() {\n    return (\n        <header className = \"hero is-info\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title is-1\">TASK LIST</h1>\n          </div>\n        </div>\n        </header>\n    );\n}\n\nfunction Footer() {\n    return(\n    <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n            <hr></hr>\n                <p>&copy; kumastry</p>\n                <p><a href = \"kumastry2212@gmail.com\">e-mail</a></p>\n                <p><a href = \"https://twitter.com/kumastry1\">twitter</a></p>\n        </div>\n    </footer>\n    );\n}\n\n\nfunction App() {\n    return (\n    <>\n    <Header />\n    <TaskForm />\n    <Footer />\n    \n    </>\n\n \n    \n    );\n}\n\nexport default App;","import App from \"./App.js\";\nimport {render} from \"react-dom\";\nimport \"bulma/css/bulma.css\";\n\nrender(<App />, document.querySelector(\"#content\"));"],"sourceRoot":""}